/**
 * Esta es clase dónde se elige el usuario para iniciar sesión con diferentes
 * permisos en el JFrame principal. En la sesión administrador se encripta la
 * contraseña.
 */
package formularios;

import com.usuarios.ListaUsuarios;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 * El autor de esta aplicación es: Moisés Rey Jelusich
 *
 * @author moises
 */
public class InicioSesion extends javax.swing.JFrame {

    //Atributos.
    private static String root = "Administrador";
    private static String pass = "moises";
    private static String textoEncriptado;
    private static String invitado = "Invitado";

    /**
     * Creates new form InicioSesion
     */
    public InicioSesion() {
        initComponents();
        //Se añaden los items al JComboBox.
        jComboBox_sesion.addItem("Elige la sesion:");
        jComboBox_sesion.addItem("Administrador");
        jComboBox_sesion.addItem("Invitado");

        //Se rellena el JComboBox con los nombres creados en el fichero usuarios.
        for (int i = 0; i < ListaUsuarios.usuarios.size(); i++) {
            jComboBox_sesion.addItem(ListaUsuarios.usuarios.get(i).getNombre());
        }

        //Opciones de la ventana.
        setDefaultCloseOperation(EXIT_ON_CLOSE);    //Para poder cerrar la ventana por defecto.
        setResizable(false);    //Para que no se pueda redimensionar la ventana.
        setLocationRelativeTo(this);    //Para centrar la ventana.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_sesion = new javax.swing.JLabel();
        jComboBox_sesion = new javax.swing.JComboBox<>();
        jButton_aceptar_sesion = new javax.swing.JButton();
        jButton_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel_sesion.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel_sesion.setForeground(new java.awt.Color(0, 0, 255));
        jLabel_sesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_sesion.setText("INICIO DE SESION");

        jComboBox_sesion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton_aceptar_sesion.setText("ACEPTAR");
        jButton_aceptar_sesion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_aceptar_sesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_aceptar_sesionActionPerformed(evt);
            }
        });

        jButton_salir.setText("SALIR");
        jButton_salir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_aceptar_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jComboBox_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_aceptar_sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_aceptar_sesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_aceptar_sesionActionPerformed
        int intentos = 0;
        //Se recoge la opción seleccionada en el jComboBox.
        int opcion = jComboBox_sesion.getSelectedIndex();
        jButton_aceptar_sesion.getAction(); //Para recoger la acción del botón aceptar.
        switch (opcion) {
            case 1:
                //Se comprueba la contraseña con el limte máximo de 3 intentos.
                do {
                    if (root.equals("Administrador")) {
                        //Para poder encriptar la contraseña y que no se vea.
                        JPasswordField password = new JPasswordField();
                        int seleccion = JOptionPane.showConfirmDialog(null, password, "Ingrese la contraseña", JOptionPane.OK_CANCEL_OPTION);
                        //Si la opción seleccionada es "OK", se puede hace acceder al menú principal sin mostrando asteriscos en vez la clave.
                        if (seleccion == JOptionPane.OK_OPTION) {
                            textoEncriptado = new String(password.getPassword());   //Se encripta la clave.
                            //Se comprueba si la clave escrita es la correcta.
                            if (textoEncriptado.equals(pass)) {
                                Formulario fr = new Formulario();
                                fr.setVisible(true);    //Para hacer visible la ventana del menú principal.
                                this.setVisible(false); //Para ocultar la ventana actual.
                                break;  //Para salir del bucle.
                            } else {
                                JOptionPane.showMessageDialog(null, "Error, introduzca la clave correcta", "ERROR", 0);
                                intentos++; //Se incrementa el contador de intentos.
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Error, introducir la clave correcta y pulsar aceptar", "ERROR", 0);
                            intentos++; //Se incrementa el contador de intentos.
                        }
                    }

                } while (intentos != 3);
                //Si los intentos son iguales a 3, se cierra la aplicación.
                if (intentos == 3) {
                    JOptionPane.showMessageDialog(null, "Error, se han alcanzado el limite de intentos, por lo que se va a cerrar la aplicación", "ERROR", 0);
                    System.exit(0);     //Para cerrar la aplicación.
                }
                break;
            case 2:
                if (invitado.equals("Invitado")) {
                    Formulario fr = new Formulario();   //Se crea el objeto fr y se instancia de la clase Formulario.

                    //Para no hacer visibles algunos botones de la clase Formulario.
                    Formulario.jButton_borrar.setVisible(false); //Para que no sea visible este botón.
                    Formulario.jButton_modificar.setVisible(false);
                    Formulario.jButton_agregar.setVisible(false);
                    Formulario.jMenu_opciones.setVisible(false);    //Para que no sea visible el primer menú de operaciones con ficheros.
                    Formulario.jMenuItem_borrar_menu.setVisible(false); //Para que no sea visible esta opcion del PopupMenu.
                    Formulario.jMenuItem_modificar_menu.setVisible(false);
                    Formulario.jMenu_usuarios.setVisible(false); //Para que no sea visible el menú de usuarios.
                    Formulario.jButton_tabla.setVisible(false); //Para que no sea visible la tabla.

                    //Se hace visible la ventana del menú principal y se oculta la ventana de inicio de sesión.
                    fr.setVisible(true);    //Para hacer visible la ventana del menú principal.
                    this.setVisible(false); //Para ocultar la ventana actual.
                }
                break;
            default:
                boolean bandera = false;    //Una bandera.
                do {
                    //Se comprueba la contraseña con el limte máximo de 3 intentos.
                    //Para poder encriptar la contraseña y que no se vea.
                    JPasswordField password = new JPasswordField();
                    int seleccion = JOptionPane.showConfirmDialog(null, password, "Ingrese la contraseña", JOptionPane.OK_CANCEL_OPTION);
                    //Si la opción seleccionada es "OK", se puede hace acceder al menú principal sin mostrando asteriscos en vez la clave.
                    if (seleccion == JOptionPane.OK_OPTION) {
                        textoEncriptado = new String(password.getPassword());   //Se encripta la clave.
                        //Se comprueba si la clave escrita es la correcta recorriendo el ArrayList.
                        for (int i = 0; i < ListaUsuarios.usuarios.size(); i++) {
                            if (textoEncriptado.equals(ListaUsuarios.usuarios.get(i).getClave())) {
                                JOptionPane.showMessageDialog(null, "Clave correcta, vas a acceder a la aplicacion", "RESULTADO", 1);
                                bandera = true;
                                break;  //Para salir del bucle.
                            }
                        }
                        //Para controlar que contador es igual al tamaño del ArrayList alumnos.
                        if (bandera == false) {
                            JOptionPane.showMessageDialog(null, "Error, introduzca la clave correcta", "ERROR", 0);
                            intentos++; //Se incrementa el contador de intentos.
                        }
                        if (bandera) {
                            Formulario fr = new Formulario();
                            //Para no hacer visibles algunos botones de la clase Formulario.
                            Formulario.jButton_borrar.setVisible(false); //Para que no sea visible este botón.
                            Formulario.jButton_modificar.setVisible(false);
                            Formulario.jMenu_opciones.setVisible(false);    //Para que no sea visible el primer menú de operaciones con ficheros.
                            Formulario.jMenuItem_borrar_menu.setVisible(false); //Para que no sea visible esta opcion del PopupMenu.
                            Formulario.jMenuItem_modificar_menu.setVisible(false);
                            Formulario.jMenu_usuarios.setVisible(false); //Para que no sea visible el menú de usuarios.
                            Formulario.jButton_tabla.setVisible(false); //Para que no sea visible la tabla.

                            fr.setVisible(true);    //Para hacer visible la ventana del menú principal.
                            this.setVisible(false); //Para ocultar la ventana actual.
                            break;  //Para salir del bucle.
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error, introducir la clave correcta y pulsar aceptar", "ERROR", 0);
                        intentos++; //Se incrementa el contador de intentos.
                    }
                } while (intentos != 3);
                //Si los intentos son iguales a 3, se cierra la aplicación.
                if (intentos == 3) {
                    JOptionPane.showMessageDialog(null, "Error, se han alcanzado el limite de intentos, por lo que se va a cerrar la aplicación", "ERROR", 0);
                    System.exit(0);     //Para cerrar la aplicaión.
                }
        }
    }//GEN-LAST:event_jButton_aceptar_sesionActionPerformed

    private void jButton_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salirActionPerformed
        System.exit(0);     //Para cerrar la aplicación.
    }//GEN-LAST:event_jButton_salirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicioSesion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton_aceptar_sesion;
    public static javax.swing.JButton jButton_salir;
    public static javax.swing.JComboBox<String> jComboBox_sesion;
    private javax.swing.JLabel jLabel_sesion;
    // End of variables declaration//GEN-END:variables
}
